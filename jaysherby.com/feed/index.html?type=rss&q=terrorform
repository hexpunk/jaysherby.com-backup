<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>Jay's blog</title>
    <link>https://jaysherby.com/</link>
    <description>&lt;h1 style="font-weight: normal"&gt;&#13;
  Hi! I'm &lt;strong&gt;Jay Sherby&lt;/strong&gt;!&#13;
&lt;/h1&gt;&#13;
&#13;
I'm an experienced software developer in Chicago.&#13;
&#13;
Hiring? Check  to see...</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <item>
      <title>Terraform Cloud + CDKTF + Auth0</title>
      <link>https://jaysherby.com/terraform-cloud-cdktf-auth0/</link>
      <description>&lt;p&gt;If you want my advice on how to manage Auth0 using CDKTF and Terraform Cloud, here it is: don't.&lt;/p&gt;
&lt;p&gt;But since you're still reading, I assume you find yourself in the regrettable situation of needing to support just such a setup.  Here are some little nuggets I've learned the hard way that don't seem to be documented elsewhere.&lt;/p&gt;
&lt;h2 id=rules-hooks-and-string-interpolation&gt;Rules, Hooks, and String Interpolation&lt;/h2&gt;&lt;p&gt;Rules and hooks are nifty features of Auth0 that allow you to run custom Javascript code on Auth0's servers in response to various events, like when a user signs up, logs in, etc.  From what I can tell, they both serve roughly the same purpose, although it seems like hooks are newer, and Auth0 would probably like to deprecate the rules feature very much.  They're both unpleasant to test, just like most kinds of code that run in other people's playgrounds.&lt;/p&gt;
&lt;p&gt;You may find yourself wanting to deploy the code for your rules and hooks using Terraform.  In the setup I inherited, the CDKTF scripts, written in Typescript, read source files for rules and hooks using &lt;code&gt;fs.readFileSync&lt;/code&gt;, and eventually insert their contents as a string into the JSON config that CDKTF synthesizes.&lt;/p&gt;
&lt;p&gt;Terraform Cloud sometimes reports errors during the planning step that say things like the following, while pointing the finger at the value for a rule's or hook's "script" key.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A reference to a resource type must be followed by at least one attribute access, specifying the resource name.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;It'll highlight some seemingly random little bit of the long and mangled string that was once your Javascript source file.&lt;/p&gt;
&lt;p&gt;Every time I've ever seen this happen, the culprit is string interpolation in the Javascript file.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;const&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;domain&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="sb"&gt;`app.&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;environment&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="sb"&gt;.my-really-cool-app.com`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Terraform's parser sees &lt;code&gt;${&lt;/code&gt; in your string, which happens to be &lt;em&gt;its&lt;/em&gt; string interpolation syntax as well, and falls flat on its face trying to figure out what you're trying to accomplish.&lt;/p&gt;
&lt;p&gt;There are ways around this.  &lt;a href='https://developer.hashicorp.com/terraform/language/expressions/strings#escape-sequences-1'&gt;According to the docs&lt;/a&gt;, you can escape &lt;code&gt;${&lt;/code&gt; with &lt;code&gt;$${&lt;/code&gt;.&lt;sup class="footnote-ref" id="fnref-1"&gt;&lt;a href="#fn-1"&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;But are you really going to put &lt;code&gt;${&lt;/code&gt; in your Javascript?  Absent of this context, &lt;code&gt;${&lt;/code&gt; looks like a bug!  You could leave a comment explaining the extra &lt;code&gt;$&lt;/code&gt;.  But after the code is deployed, the comment will remain and the extra &lt;code&gt;$&lt;/code&gt; would disappear.  The comment wouldn't make sense if you looked at the code form inside the Auth0 management console.&lt;/p&gt;
&lt;p&gt;IMHO, doing this is asking for trouble.  Plus it feels gross.&lt;/p&gt;
&lt;p&gt;Worse yet, what if the name of the variable inside your interpolated string (&lt;code&gt;environment&lt;/code&gt; in the example above) &lt;em&gt;does&lt;/em&gt; mean something to Terraform and it replaces it with a value? The code would probably throw an error if the replaced value wasn't a variable in your script.  What if it was!?  In any case, the code deployed won't match the code in your repository.  Good luck chasing down that bug!&lt;/p&gt;
&lt;p&gt;The workaround I chose was to avoid template string interpolation all together and revert back to string concatenation like we did in the days before template literals were introduced.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;const&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;domain&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;app.&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;environment&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;.my-really-cool-app.com&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=terraform-variables-vs-environment-variables&gt;Terraform Variables vs Environment Variables&lt;/h2&gt;&lt;p&gt;Using environment variables when writing your config with CDKTF and deploying with Terraform Cloud can be fraught, to say the least.  There's at least one very good reason to use environment variables when using the Auth0 provider: they recommend it &lt;a href='https://registry.terraform.io/providers/auth0/auth0/0.44.0/docs#environment-variables'&gt;in the docs&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Let's clarify something first.  Because of how CDKTF works, environment variables can be inserted in at least two stages: synthesis and planning.&lt;/p&gt;
&lt;p&gt;If you do anything in your code using &lt;code&gt;process.env&lt;/code&gt; to get at environment variables, this is at best confusing, at worst incorrect. This is how you'd read environment variables &lt;em&gt;at synthesis time&lt;/em&gt;, which is probably not what you actually want.  Doing this would affect what is output to your Terraform JSON when you run CDKTF's synthesis step.  It essentially becomes a hard-coded value from the point of view of Terraform.&lt;/p&gt;
&lt;p&gt;What you probably want to do, and what the Auth0 provider documentation is referring to, is environment variables &lt;em&gt;at planning time&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;The environment variables the docs refer to, &lt;code&gt;AUTH0_DOMAIN&lt;/code&gt;, &lt;code&gt;AUTH0_CLIENT_ID&lt;/code&gt;, and &lt;code&gt;AUTH0_CLIENT_SECRET&lt;/code&gt;, are not &lt;em&gt;directly&lt;/em&gt; accessible to your Terraform config.&lt;sup class="footnote-ref" id="fnref-2"&gt;&lt;a href="#fn-2"&gt;2&lt;/a&gt;&lt;/sup&gt; I need to set these values as secrets for one of my hooks.&lt;/p&gt;
&lt;h3 id=the-most-correcttm-way&gt;The Most Correct™ Way&lt;/h3&gt;&lt;p&gt;As I said, you can't &lt;em&gt;directly&lt;/em&gt; access those environment variables for reasons I'll soon explain.  Terraform-literate readers will already know that the Most Correct™ way to access the values would be &lt;em&gt;indirectly&lt;/em&gt; via the resources that use them.  This is The Terraform Way.&lt;/p&gt;
&lt;p&gt;If this configuration was written in HCL, this would be comically easy.  But we're using CDKTF for reasons I can't begin to explain.&lt;/p&gt;
&lt;p&gt;You should be able to access &lt;code&gt;AUTH0_DOMAIN&lt;/code&gt;, &lt;code&gt;AUTH0_CLIENT_ID&lt;/code&gt;, and &lt;code&gt;AUTH0_CLIENT_SECRET&lt;/code&gt; via &lt;code&gt;Auth0Provider#domainInput&lt;/code&gt;, &lt;code&gt;Client#clientId&lt;/code&gt;, and &lt;code&gt;Client#clientSecret&lt;/code&gt;, respectively.  But my config isn't written in a way that would make this easy.  It would require a ton of refactoring that I don't have the time or patience for at the moment.&lt;/p&gt;
&lt;h3 id=the-quick-n-hacky-way&gt;The Quick 'N' Hacky Way&lt;/h3&gt;&lt;p&gt;Since I can't access those particular environment variables directly, and I'm unable to access the values indirectly via the resources that consume them, I chose to add some duplicate variables that I &lt;em&gt;could&lt;/em&gt; access like any other variable.&lt;/p&gt;
&lt;p&gt;The official way to get values into Terraform at planning time via environment variables is to use them in your CDKTF configuration just like any other variable (using the &lt;code&gt;TerraformVariable&lt;/code&gt; class), and set an environment variable in Terraform Cloud with the same name but with a &lt;code&gt;TF_VAR_&lt;/code&gt; prefix.&lt;/p&gt;
&lt;p&gt;That meant that for my use case, I needed both &lt;code&gt;AUTH0_DOMAIN&lt;/code&gt; &lt;em&gt;and&lt;/em&gt; &lt;code&gt;TF_VAR_AUTH0_DOMAIN&lt;/code&gt; set in my Terraform Cloud variables config page,&lt;sup class="footnote-ref" id="fnref-3"&gt;&lt;a href="#fn-3"&gt;3&lt;/a&gt;&lt;/sup&gt; along with the remaining two variables mentioned earlier, using this same pattern.  If I only set &lt;code&gt;AUTH0_DOMAIN&lt;/code&gt;, the Auth0 provider will work, but the &lt;code&gt;AUTH0_DOMAIN&lt;/code&gt; &lt;em&gt;Terraform variable&lt;/em&gt; defaulted to an empty string!  If I set &lt;code&gt;TF_VAR_AUTH0_DOMAIN&lt;/code&gt; but not &lt;code&gt;AUTH0_DOMAIN&lt;/code&gt;, I got the following error during the planning phase.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The argument "domain" is required, but no definition was found.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I chose to set both &lt;code&gt;AUTH0_DOMAIN&lt;/code&gt; and &lt;code&gt;TF_VAR_AUTH0_DOMAIN&lt;/code&gt; as environment variables in Terraform Cloud because that's ever-so-slightly less confusing IMHO than two variables, both named &lt;code&gt;AUTH0_DOMAIN&lt;/code&gt;, one a Terraform variable and the other an environment variable.  I figure someone would be more likely to erroneously delete one of the two copies in the future if both variables shared the same exact name but were different variable types.  As always, notes and documentation are your best friends.&lt;/p&gt;
&lt;hr /&gt;
&lt;section class="footnotes"&gt;
&lt;ol&gt;
&lt;li id="fn-1"&gt;&lt;p&gt;I've seen some bizarre alternative ways of escaping &lt;code&gt;${&lt;/code&gt; suggested on Stack Overflow, but all of my criticism still apply.&lt;a href="#fnref-1" class="footnote"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id="fn-2"&gt;&lt;p&gt;There &lt;em&gt;are&lt;/em&gt; ways you can expose all environment variables as Terraform variables without having to know the variables' keys beforehand, but it's not what The Architects intended.  I've only seen examples of these techniques in HCL.  It might be possible to accomplish in CDKTF, but you'd be fighting your chosen tools so hard that I'd question the whole endeavor.  Just because you &lt;em&gt;can&lt;/em&gt; doesn't mean you &lt;em&gt;should&lt;/em&gt;.&lt;a href="#fnref-2" class="footnote"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id="fn-3"&gt;&lt;p&gt;In case you were wondering, you still need to add the &lt;code&gt;TF_VAR_&lt;/code&gt; prefix yourself in Terraform Cloud. That wasn't immediately clear to me.  I'm guessing it's to support environment variables that don't start with &lt;code&gt;TF_VAR_&lt;/code&gt; since providers (like Auth0 with &lt;code&gt;AUTH0_DOMAIN&lt;/code&gt;, etc.) aren't required to conform to that pattern.  &lt;img src="https://bear-images.sfo2.cdn.digitaloceanspaces.com/jaysherby-1678334687-0.png" alt="Don't forget TF_VAR_" /&gt;&lt;a href="#fnref-3" class="footnote"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</description>
      <author>hidden (jaysherby)</author>
      <guid isPermaLink="false">https://jaysherby.com/terraform-cloud-cdktf-auth0/</guid>
      <pubDate>Thu, 09 Mar 2023 00:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>
